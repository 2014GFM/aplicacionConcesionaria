/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ar.com.vehiculos.ventanas;

import ar.com.baseDeDatos.AdministradorDeConexiones;
import ar.com.vehiculos.entidades.Comprador;
import ar.com.vehiculos.entidades.CustomListModelCompradores;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Daiana
 */
public class compradoresVentana extends javax.swing.JInternalFrame {

    /** Creates new form compradoresVentana */
    // Creo lista para mostrar
    CustomListModelCompradores list_model = new CustomListModelCompradores();
    public compradoresVentana() throws Exception {
        initComponents();
        
        // Seteo list para cargar por defecto
        llenarListaDeCompradores();
        
        // Desabilito botones guardar y eliminar
        btn_guardar.setEnabled(false);
        btn_eliminar.setEnabled(false);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_listaCompradores = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_documento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_presupuesto = new javax.swing.JTextField();
        btn_nuevo = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_cerrar = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Lista de Compradores");

        list_listaCompradores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list_listaCompradores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                list_listaCompradoresValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list_listaCompradores);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Nombre");

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Apellido");

        txt_apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apellidoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel5.setText("DNI");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel6.setText("Presupuesto");

        btn_nuevo.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        btn_guardar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.setMaximumSize(new java.awt.Dimension(80, 31));
        btn_guardar.setMinimumSize(new java.awt.Dimension(80, 31));
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_eliminar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        btn_cerrar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btn_cerrar.setText("Cerrar");
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_eliminar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_presupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel2))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                            .addComponent(txt_documento)
                                            .addComponent(txt_nombre)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_presupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void llenarListaDeCompradores() throws Exception{
        // Armo la query
        try ( // Obtengo una conexion
                Connection unaConexion = AdministradorDeConexiones.obtenerConexion()) {
            // Armo la query
            String unaConsulta = "select * from compradores";
            
            // Ejecuto la senetencia y almaceno el resultado en un objeto de tipo ResulSet
            try ( // Creo un objeto de tipo Statement que ejecutara la sentencia
                    Statement unaSentencia = unaConexion.createStatement()) {
                // Ejecuto la senetencia y almaceno el resultado en un objeto de tipo ResulSet
                ResultSet unResultado = unaSentencia.executeQuery(unaConsulta);
                // Recorro el resultado y lo imprimo en consola
                while (unResultado.next()) {
                    int idcompradores = unResultado.getInt("idcompradores");
                    String nombre = unResultado.getString("nombre");
                    String apellido = unResultado.getString("apellido");
                    int numeroDocumento = unResultado.getInt("numeroDocumento");
                    double presupuesto = unResultado.getInt("presupuesto");
                    
                    Comprador unComprador = new Comprador(presupuesto, idcompradores, nombre, apellido, numeroDocumento);
                    list_model.agregarPersona(unComprador);
                }
                // Cierro la sentencia
            }
        }
        
        list_listaCompradores.setModel(list_model);
    }
    
    private void txt_apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apellidoActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        //Limpio area de textos al precionar boton nuevo
        txt_nombre.setText(null);
        txt_apellido.setText(null);
        txt_documento.setText(null);
        txt_presupuesto.setText(null);
        
        //Al presionar boton nuevo pasa a desabilitarse
        btn_nuevo.setEnabled(false);
        
        //Al presionar boton nuevo se habilita boton guardar
        btn_guardar.setEnabled(true);
        
        //Al presionar boton nuevo el foco se pone en nombre
        txt_nombre.requestFocus();
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        //Tomo valor de caja de texto
        String nombre = txt_nombre.getText();
        String apellido = txt_apellido.getText();
        String documento = txt_documento.getText();
        String presupuestos = txt_presupuesto.getText();
        int idcompradores = 0;
        
        //Valido que no este vacio
        if(nombre.isEmpty()){
            // Si nombre esta vacio muestro caja de dialogo
            JOptionPane.showMessageDialog(null, "El nombre no puede estar vacio", "Alerta", JOptionPane.WARNING_MESSAGE);
            // Pongo el foco en nombre
            txt_nombre.requestFocus();
        }
        else if(apellido.isEmpty()){
            JOptionPane.showMessageDialog(null, "El apellido no puede estar vacio", "Alerta", JOptionPane.WARNING_MESSAGE);
            txt_apellido.requestFocus();
        }
        else if(documento.isEmpty()){
            JOptionPane.showMessageDialog(null, "El documento no puede estar vacio", "Alerta", JOptionPane.WARNING_MESSAGE);
            txt_documento.requestFocus();
        }
        //Valido que dato ingresado sea numero
        else if(!documento.matches("[0-9]*")){
            // Si documento no es numero muestro caja de dialogo
            JOptionPane.showMessageDialog(null, "El documento debe ser un numero entero", "Alerta", JOptionPane.WARNING_MESSAGE);
            // Pongo foco en documento
            txt_documento.requestFocus();
            // Limpio caja de texto
            txt_documento.setText(null);           
        }
        else if(presupuestos.isEmpty()){
            JOptionPane.showMessageDialog(null, "El presupuesto no puede estar vacio", "Alerta", JOptionPane.WARNING_MESSAGE);
            txt_presupuesto.requestFocus();
        }
        else if(!presupuestos.matches("[0.0-9.9]*")){
            JOptionPane.showMessageDialog(null, "El presupuesto debe ser un numero con decimales", "Alerta", JOptionPane.WARNING_MESSAGE);
            txt_presupuesto.requestFocus();
            txt_presupuesto.setText(null);           
        }
        else{
            //Si todo esta completo: guardo, limpio cajas de texto, habilito boton nuevo y desabilito boton guardar
            JOptionPane.showMessageDialog(null, "El comprador ha sido guardado");
            
            txt_nombre.setText(null);
            txt_apellido.setText(null);
            txt_documento.setText(null);
            txt_presupuesto.setText(null);
            
            btn_nuevo.setEnabled(true);
            btn_guardar.setEnabled(false);
            
            // Parseo presupuesto y documento
            double presupuesto = Double.parseDouble(presupuestos);
            int numeroDocumento = Integer.parseInt(documento);
            
            // Instancio nuevo comprador
            Comprador p = new Comprador();
            p.setIdcompradores(idcompradores);
            p.setNombre(nombre);
            p.setApellido(apellido);
            p.setNumeroDocumento(numeroDocumento);
            p.setPresupuesto(presupuesto);
            try {
                list_model.agregarPersonaDB(p, idcompradores, nombre, apellido, numeroDocumento, presupuesto);
            } catch (Exception ex) {
                Logger.getLogger(compradoresVentana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // Elimino auto
        int selection = list_listaCompradores.getSelectedIndex();
        int resp = JOptionPane.showConfirmDialog(null, "Desea eliminar el Comprador seleccionado?", "Elija una opcion", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (selection!=-1 && resp == 0) {
            try {
                Comprador p = list_model.getPersona(selection);               
                list_model.eliminarPersona(p, selection);
                btn_eliminar.setEnabled(false);
                JOptionPane.showMessageDialog(null, "El Comprador ha sido eliminado");
                txt_nombre.setText(null);
                txt_apellido.setText(null);
                txt_documento.setText(null);
                txt_presupuesto.setText(null);
                btn_guardar.setEnabled(false);
            } catch (Exception ex) {
                Logger.getLogger(compradoresVentana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
        //Boton cerrar cierra venta en cuestion
        this.hide();
    }//GEN-LAST:event_btn_cerrarActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void list_listaCompradoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_list_listaCompradoresValueChanged
        // Selecciono y muestro datos de auto guardado
        int selection = list_listaCompradores.getSelectedIndex();
        if (selection!=-1) {            
            Comprador p = list_model.getPersona(selection);
            txt_nombre.setText(p.getNombre());
            txt_apellido.setText(p.getApellido());
            txt_documento.setText(Integer.toString(p.getNumeroDocumento()));
            txt_presupuesto.setText(Double.toString(p.getPresupuesto()));
            
            // Habilito boton eliminar
            btn_eliminar.setEnabled(true);
        }
    }//GEN-LAST:event_list_listaCompradoresValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cerrar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list_listaCompradores;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_documento;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_presupuesto;
    // End of variables declaration//GEN-END:variables

}